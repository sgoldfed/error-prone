<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2011 Google Inc. All Rights Reserved.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Added this because the JSR 305 dependency wouldn't download from the
       default repository.  -->
  <repositories>
    <repository>
      <id>alt-repo1</id>
      <name>repo1.maven.org</name>
      <url>http://repo1.maven.org</url>
    </repository>
  </repositories>

  <parent>
    <groupId>com.google.errorprone</groupId>
    <artifactId>error_prone_parent</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>

  <name>error-prone library</name>
  <artifactId>error_prone_core</artifactId>

  <dependencies>
    <!-- We must minimise our runtime dependencies as they'll appear in
         the javac classpath for all users! -->
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotation</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit-dep</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>1.2.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>r09</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-assistedinject</artifactId>
      <version>3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-servlet</artifactId>
      <version>3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>2.0.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.8.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.squareup.dagger</groupId>
      <artifactId>dagger</artifactId>
      <version>1.1.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Include the @BugPattern annotation in the main distribution
           so users have only one jar to add to their classpath. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>1.2.2</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- tools.jar is in the classpath by default on Apple-provided JDK
         but not OpenJDK. We don't compile with Apple's JDK right now, so this
         dependency is always included. If we ever need to run on the Apple JDK,
         we could use activation like this
         <profile>
          <id>tools-jar</id>
           <activation>
            <os>
             <family>!mac</family>
            </os>
    -->
    <profile>
      <id>tools.jar</id>
      <activation>
        <!-- Our release turns the systemPath into an absolute path, which doesn't resolve
             for downstream dependent projects. So just drop this dep in that case.
             See issue #18 -->
        <file>
          <exists>${java.home}/../lib/tools.jar</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>openjdk</groupId>
          <artifactId>tools</artifactId>
          <version>1.6</version>
          <scope>system</scope>
          <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>

    <!-- run annotation processor -->
    <profile>
      <id>run-annotation-processor</id>
      <dependencies>
        <dependency>
          <groupId>com.google.errorprone</groupId>
          <artifactId>error_prone_docgen</artifactId>
          <version>${project.version}</version>
        </dependency>
        <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <version>r09</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.1.1</version>
            <executions>
              <execution>
                <phase>site</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>com.google.errorprone.DocGen</mainClass>
                  <arguments>
                    <argument>${basedir}/target/generated-sources/annotations/bugPatterns.txt</argument>
                    <argument>${basedir}/target/generated-wiki/</argument>
                    <argument>${basedir}/src/test/resources/</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
